server Global;
server Planet;

notification MessageReceived;

response EMailTaken;
response CharacterNameTaken;
response ObjectNotFound;

type UserId = i64;
type ObjectId = u64;

category User {
    server = Global;
    auth = false;
    method Login {
        in = {
            [RegularExpression(@"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$")]
            [ApiString]
            EmailAddress: string,
            [ApiString]
            Password: string,
        };
        out = {
            UserId: UserId
        };
    }
    method Register {
        in = {
            [RegularExpression(@"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$")]
            [ApiString]
            EmailAddress: string,
            [ApiString]
            Password: string,
            [ApiString]
            CharacterName: string
        };
        out = {
            UserId: UserId
        };
    }
}

category Message {
    server = Global;
    auth = true;
    method Send {
        in = {
            [ObjectId]
            ReceiverUserId: UserId,
            [ObjectId(Optional = true)]
            ConversationId: UserId,
            [ApiString]
            Subject: string,
            [ApiString(MaxLength=1000000)]
            Message: string,
        };
        out = {
            MessageId: ObjectId
        };
    }
    method Get {
        in = {
            [ObjectId]
            MessageId: ObjectId
        };
        out = {
            Subject: string,
            Text: string,
            Sent: DateTime,
            Type: u32,
            ReceiverUserId: UserId,
            SenderUserId: UserId,
        };
    }
    method GetList {
        in = {
            GetReceived: bool,
        };
        [List(Class = "Message")]
        out = {
            Subject: string,
            Text: string,
            Sent: DateTime,
            Type: u32,
            ReceiverUserId: UserId,
            SenderUserId: UserId
        };
    }
    method Delete {
        in = {
            [ObjectId]
            MessageId: ObjectId,
        };
    }
}
